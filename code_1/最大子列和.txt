//定义函数，使用函数
#include <iostream>
using namespace std;
int max_sub_sum(int arr[], int n)
{
	int this_sum = 0, max_sum = 0;
	for (int i = 0; i < n; ++i)
	{
		this_sum += arr[i];
		if (this_sum>max_sum)
		{
			max_sum = this_sum;
		}
		else if (this_sum < 0)
		{
			this_sum = 0;
		}
	}
	return max_sum;
}

int main()
{
	int arr[100000];
	int n;
	cin >> n;
	for (int i = 0; i < n; ++i)
	{
		int x;
		cin >> x;
		arr[i] = x;
	}
	cout << max_sub_sum(arr, n);
	return 0;
}
--------------------------------------------------

//定义类，使用类
#include <iostream>
using namespace std;
class max_sub_sum
{
	int *p;
	int len;
public:
	max_sub_sum() :p(nullptr), len(0){}
	max_sub_sum(int arr[], int n) :p(arr), len(n){}
	void init(int arr[], int n)
	{
		p = arr;
		len = n;
	}
	int maxsum();
};
int max_sub_sum::maxsum()
{
	int this_sum = 0, max_sum = 0;
	for (int i = 0; i < len; ++i)
	{
		this_sum += p[i];
		if (this_sum>max_sum)
		{
			max_sum = this_sum;
		}
		else if (this_sum < 0)
		{
			this_sum = 0;
		}
	}
	return max_sum;
}
int main()
{
	int arr[100000];
	int n;
	cin >> n;
	for (int i = 0; i < n; ++i)
	{
		int x;
		cin >> x;
		arr[i] = x;
	}
	max_sub_sum m(arr, n);
	/*max_sub_sum m;
	m.init(arr, n);*/
	cout << m.maxsum();
	return 0;
}
