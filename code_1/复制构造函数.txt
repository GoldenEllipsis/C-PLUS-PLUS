C++11做法：用“=delete”指示编译器不生成默认复制构造函数。

例：

class Point //Point 类的定义
{   
public:
    Point(int xx=0, int yy=0) { x = xx; y = yy; }    //构造函数，内联
    Point(const Point& p) =delete;  //指示编译器不生成默认复制构造函数
private:
    int x, y; //私有数据
};


复制构造函数被调用的三种情况：

   定义一个对象时，以本类另一个对象作为初始值，发生复制构造；

   如果函数的形参是类的对象，调用函数时，将使用实参对象初始化形参对象，发生复制构造；

   如果函数的返回值是类的对象，函数执行完成返回主调函数时，将使用return语句中的对象
   初始化一个临时无名对象，传递给主调函数，此时发生复制构造。
